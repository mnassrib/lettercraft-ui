name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Vérifiez le dépôt CI/CD
    - name: Checkout CI/CD Repository
      uses: actions/checkout@v3
      with:
        repository: mnassrib/lettercraft-ui
        ref: main
    
    # 2. Cloner le dépôt privé (où est le code Flask)
    - name: Checkout private Flask repository
      uses: actions/checkout@v3
      with:
        repository: mnassrib/lettercraft-backend
        token: ${{ secrets.GH_PAT }}
    
    # 3. Configurer l'environnement Python
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # 4. Installer les dépendances du projet
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 5. Exécuter les tests
    - name: Run tests
      run: |
        pytest --maxfail=5 --disable-warnings

    # 6. Créer une image Docker seulement si les tests réussissent
    - name: Build Docker image
      if: success()
      run: |
        docker build -t lettercraft .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    # 7. Déploiement sur Render
    - name: Deploy to Render
      if: success()
      run: |
        curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}  \
        -H 'Authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
        -H 'Accept: application/json' \
        --data '{"clearCache":false}'
        
